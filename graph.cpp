/* 
Graph in Data Structures
1. What is a Graph?
A Graph is a non-linear data structure consisting of a collection of vertices (nodes) and edges (connections).
It is used to represent networks like Google Maps, social networks, and the internet.

2. Components of a Graph
Vertex (V) â€“ A node in a graph.
Edge (E) â€“ A connection between two vertices.
Graph = (V, E)
3. Types of Graphs
(i) Based on Edge Weight
Weighted Graph â€“ Edges have weights (cost, distance, etc.).
Unweighted Graph â€“ All edges have the same weight.
âœ… Example of Weighted & Unweighted Graphs

Weighted Graph (Directed & Undirected)
    (A)---    2-- B)      (A)â†’2â†’(B)
     | \         / |      |       |
    5|  3      4|  1      5â†“       â†“4
     |   \    /  |      (C)â†’1â†’(D)
    (C)---6---(D)
Unweighted Graph (Directed & Undirected)
    (A)---    (B)       (A)â†’(B)
     | \      / |      |      |
     |  \    /  |      â†“      â†“
    (C)---(D)       (C)â†’(D)
(ii) Based on Cycles
Cyclic Graph â€“ Contains at least one cycle.
Acyclic Graph â€“ No cycles are present.
âœ… Example of Cyclic & Acyclic Graphs
    Cyclic: A â†’ B â†’ C â†’ A  
    Acyclic: A â†’ B â†’ C â†’ D
(iii) Other Special Graphs
Self-loop Graph â€“ A vertex has an edge to itself.
Adjacent Vertices â€“ Two vertices connected by an edge.
Multi-Edge Graph â€“ Multiple edges between two vertices.
Simple Graph â€“ No loops, no multiple edges.
Multi-Graph â€“ Multiple edges allowed.
PseudoGraph â€“ A graph with self-loops and multiple edges.

4. Graph Representation
(i) Adjacency Matrix (2D Array)
Uses N Ã— N matrix where 1 represents an edge and 0 represents no edge.
âœ… Example of Adjacency Matrix (for Weighted Graph)
    A	B	C	D
A	0	2	5	3
B	2	0	4	1
C	5	4	0	6
D	3	1	6	0
0 means no edge.
Numbers represent edge weights.
(ii) Adjacency List (Linked List)
Each vertex has a list of connected vertices.
âœ… Example of Adjacency List (Weighted Graph)
A â†’ (B,2) â†’ (C,5) â†’ (D,3)  
B â†’ (A,2) â†’ (C,4) â†’ (D,1)  
C â†’ (A,5) â†’ (B,4) â†’ (D,6)  
D â†’ (A,3) â†’ (B,1) â†’ (C,6)  

5. Graph Traversal Algorithms
(i) BFS (Breadth-First Search)
Uses Queue (FIFO).
Explores neighbors first, then moves to the next level.
Example: Finding the shortest path in an unweighted graph.
Graph:
    (A)
   /   \
 (B)   (C)
  |     |
 (D)   (E)

âœ… Example BFS Traversal
ðŸ“Œ Steps:
Visit A, add neighbors B, C to the queue.
Visit B, add D to the queue.
Visit C, add E to the queue.
Visit D (No new neighbors).
Visit E (No new neighbors).

âœ… BFS Order (starting from A):
A â†’ B â†’ C â†’ D â†’ E

(ii) DFS (Depth-First Search)
Uses Stack (LIFO).
Explores deep into the graph before backtracking.
Example: Solving mazes and puzzles.
âœ… Example DFS Traversal
ðŸ“Œ Steps:

Visit A, move to B.
Visit B, move to D.
Visit D (No new neighbors, backtrack).
Back to A, move to C.
Visit C, move to E.
Visit E (No new neighbors, backtrack).

âœ… DFS Order (starting from A):
A â†’ B â†’ D â†’ C â†’ E
*/